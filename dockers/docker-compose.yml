version: '3'

services:
  hj-consul:
    image: consul
    container_name: hj-consul
    restart: on-failure
    ports:
      - 8500:8500
      - 8600:8600/udp
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - hjnet

  hj-postgres:
    container_name: hj-postgres
    build:
      context: ./software/postgres
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: HJ.2020
    volumes:
      - ./var/postgresql:/var/lib/postgresql
    networks:
      - hjnet

  hj-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: hj-elasticsearch
    restart: on-failure
    user: elasticsearch
    environment:
      - cluster.name=hj-elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      # mkdir -p ./var/elasticsearch/data; sudo chown -R 1000:1000 ./var/elasticsearch/data
      - ./var/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - hjnet

  hj-kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: hj-kibana
    depends_on:
      - hj-elasticsearch
    restart: on-failure
    environment:
      SERVER_NAME: hj-kibana
      ELASTICSEARCH_HOSTS: http://hj-elasticsearch:9200
    #    volumes:
    #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - hjnet

  hj-apm-server:
    image: docker.elastic.co/apm/apm-server:7.10.0
    container_name: hj-apm-server
    depends_on:
      - hj-elasticsearch
    restart: on-failure
    user: apm-server
#    environment:
#      - output.elasticsearch.hosts="hj-elasticsearch:9200"
    volumes:
      - ./software/apm-server/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - hjnet

  hj-pulsar:
    image: apachepulsar/pulsar:2.6.2
    container_name: hj-pulsar
    restart: on-failure
    command: "bin/pulsar standalone"
    volumes:
      - ./var/pulsar/data:/pulsar/data
#      - ./var/pulsar/conf:/pulsar/conf
    ports:
      - 6650:6650
      - 8080:8080
    networks:
      - hjnet

#  hj-zookeeper:
#    container_name: hj-zookeeper
#    image: zookeeper:3.5
#    restart: on-failure
#    ports:
#      - "2181:2181"
#    networks:
#      - hjnet

#  hj-kafka:
#    container_name: hj-kafka
#    image: wurstmeister/kafka:2.12-2.5.1
#    depends_on:
#      - hj-zookeeper
#    restart: on-failure
#    ports:
#      - "9092:9092"
#      - "9988:9988"
#    environment:
#       #若需要在其它物理主机上访问此Kafka服务，此处应设置为物理主机实际IP地址
#      KAFKA_ADVERTISED_HOST_NAME: "localhost"
#      #KAFKA_CREATE_TOPICS: "test:1:1"
#      KAFKA_ZOOKEEPER_CONNECT: hj-zookeeper:2181
#      JMX_PORT: 9988
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - hjnet

networks:
  hjnet:
